# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions


name: Push Container to Heroku

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      output_port: ${{ steps.port.outputs.testport }}
    steps:
    - uses: actions/checkout@v1
    
    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login
    
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web 
    
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
    
    - name: Sleep
      run: sleep 30
    
    - id: port
      name: Check port
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: echo ::set-output name=testport::$(heroku logs -n 3 -a dummyload |  grep -o 'Running on this port [0-9]\+' | sed -e 's/[^0-9]//g')
    
    - name: Echo steps.port.outputs.testport
      run: echo "${{steps.port.outputs.testport}}"
    
#     - id: port
#       name: Check port
#       env:
#         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#       run: echo ::set-env name=TESTPORT::$(heroku logs -n 2 -a dummyload |  grep -o 'Running on this port [0-9]\+' | sed -e 's/[^0-9]//g')
    


  
  loadtest:
    name: k6 local test run 
    runs-on: ubuntu-latest
    container: docker://loadimpact/k6:latest
    needs: [build]
  
    steps:
    - name: Echo port
      run: echo "${{needs.build.outputs.output_port}}"
      
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Run k6 local test
      uses: k6io/action@v0.1
      with:
        filename: script.js
      env:
#         HOST: ${{ secrets.HEROKU_APP_NAME }}
        HOST: dummyload.herokuapp.com
        PORT: ${{ needs.build.outputs.output_port }}
    
#     - name: Local k6 test
#       run: run script.js -e MY_HOSTNAME=${{ secrets.HEROKU_APP_NAME }} MY_PORT=${{ needs.build.outputs.output_port }}
      
#     - name: Local k6 test
#       run: k6 run script.js -e MY_HOSTNAME=${{ secrets.HEROKU_APP_NAME }} MY_PORT=${{ needs.build.outputs.output_port }}
    
    



# name: My-Fantastic-Load-Pipeline

# on:
#   push:
#     branches: [ master ]

# jobs:
#   build:

#     name: build Node.js application
#     runs-on: ubuntu-latest
    
#     strategy:
#       matrix:
#         node-version: [12.x]

#     services:
#       mydummyservice:
#        image: docker://eszhlznkv/dummyload:firsttry
#        ports: 
#         - 49160:8080
    
#     container: 
#       image: docker://loadimpact/k6:latest
# #       ports: 
# #         - 49160:49160
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v1
    
#     - name: Local k6 test
#       run: k6 run script.js -e MY_HOSTNAME=$MY_HOSTNAME MY_PORT=$MY_PORT
#       env:
#        MY_HOSTNAME: mydummyservice
#        MY_PORT: 49160
      
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: npm ci
#     - run: npm run build --if-present
      
#     - run: node server.js &
#     - run: echo "Application has been deployed!"
#     - run: curl http://localhost:49160/
   
#     - name: Checkout for nodeserver
#       uses: actions/checkout@v1
      
#     - name: run nodeserver in Docker 
#       uses: docker://eszhlznkv/dummyload:firsttry
#       with:
#         args: |
#            node server.js &
#         ports: 
#          49160:8080      

#     - name: Checkout for loadtest
#       uses: actions/checkout@v1
      
#     - name: k6 local test run 
#       uses: docker://loadimpact/k6:latest
#       with:
#        args: |
#           run script.js 
      

#   k6_loadtest_local:
    
#     name: k6 local test run 
#     runs-on: ubuntu-latest
#     container: docker://loadimpact/k6:latest
#     ports:
#     -  49160:49160

# # #     needs: [build]
  
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v1
    
      
#     - name: Local k6 test
#       run: k6 run script.js
